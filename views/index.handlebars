    <div class="mannequin">
    	<div class="wrapper">
	    	<div class="modelHead">
	    		<span class="face">{{! FACE }}</span>
	    	</div>
			<div class="top row">

			</div>
			<div class="bottom row">

			</div>
			<div class="shoes row">

			</div>
		</div>
    </div>

<script type="text/javascript">
var	carouselTops,
	carouselBottoms,
	carouselShoes,
	el,
	i,
	page;

        var tops = [
{{#each tops}}
	{
	  img: '{{this}}',
	  buyLink: ''
	},
{{/each}}
        ];

        var bottoms = [
{{#each bottoms}}
	{
	  img: '{{this}}',
	  buyLink: ''
	},
{{/each}}
	]; 

	var shoes = [
{{#each shoes}}
	{
	  img: '{{this}}',
	  buyLink: ''
	},
{{/each}}
	];

carouselTops = new SwipeView('.top', {
	numberOfPages: tops.length,
	hastyPageFlip: true
});

carouselBottoms = new SwipeView('.bottom', {
	numberOfPages: bottoms.length,
	hastyPageFlip: true
});

carouselShoes = new SwipeView('.shoes', {
	numberOfPages: shoes.length,
	hastyPageFlip: true
});

// Load initial data
for (i=0; i<3; i++) {
	page = i==0 ? tops.length-1 : i-1;

	el = document.createElement('img');
	el.src = tops[page].img;
        el.width = 240;
        el.height = 240;
	carouselTops.masterPages[i].appendChild(el);
}

// Load initial data
for (i=0; i<3; i++) {
	page = i==0 ? bottoms.length-1 : i-1;

	el = document.createElement('img');
	el.src = bottoms[page].img;
        el.width = 240;
        el.height = 240;
	carouselBottoms.masterPages[i].appendChild(el);
}

// Load initial data
for (i=0; i<3; i++) {
	page = i==0 ? shoes.length-1 : i-1;

	el = document.createElement('img');
	el.src = shoes[page].img;
        el.width = 240;
        el.height = 240;
	carouselShoes.masterPages[i].appendChild(el);
}

carouselTops.onFlip(function () {
	var el,
		upcoming,
		i;

	for (i=0; i<3; i++) {
		upcoming = carouselTops.masterPages[i].dataset.upcomingPageIndex;

		if (upcoming != carouselTops.masterPages[i].dataset.pageIndex) {
			el = carouselTops.masterPages[i].querySelector('span');
			el.innerHTML = tops[upcoming];
		}
	}
});

carouselBottoms.onFlip(function () {
	var el,
		upcoming,
		i;

	for (i=0; i<3; i++) {
		upcoming = carouselBottoms.masterPages[i].dataset.upcomingPageIndex;

		if (upcoming != carouselBottoms.masterPages[i].dataset.pageIndex) {
			el = carouselBottoms.masterPages[i].querySelector('span');
			el.innerHTML = bottoms[upcoming];
		}
	}
});

carouselShoes.onFlip(function () {
	var el,
		upcoming,
		i;

	for (i=0; i<3; i++) {
		upcoming = carouselShoes.masterPages[i].dataset.upcomingPageIndex;

		if (upcoming != carouselShoes.masterPages[i].dataset.pageIndex) {
			el = carouselShoes.masterPages[i].querySelector('span');
			el.innerHTML = shoes[upcoming];
		}
	}
});
</script>
